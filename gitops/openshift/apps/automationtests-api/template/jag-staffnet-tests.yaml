apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${COMPONENT_NAME}
  description: Deployment template for the JAG-STAFFNET-TESTS

labels:
  app: ${APP_NAME}
  app.kubernetes.io/name: ${COMPONENT_NAME}
  app.kubernetes.io/part-of: ${APP_NAME}
  app.openshift.io/runtime: ${RUNTIME}

parameters:

  - name: APP_NAME
    description: The application name that each component is part of
    required: false
    value: jag-staffnet

  - name: COMPONENT_NAME
    description: The application name that each component is part of
    required: false
    value: jag-staffnet-tests

  - name: OC_NAMESPACE
    description: The OpenShift namespace prefix
    required: false
    # Below value must be changed as per gold cluster oc nameplate
    value: c71a03

  - name: OC_ENV
    description: The OpenShift environment, ie dev, test or prod
    required: true

  - name: RUNTIME
    description: The run time of the application
    required: false
    value: java

  - name: DNS
    description: The application DNS for route url
    required: false
    # Below value must be changed as per gold & dr cluster certificate/DNS
    value: apps.silver.devops.gov.bc.ca

  - name: AUTH_HEADER
    description: The http Authorization header required for performing livenessProbe & readinessProbe in deployment config during container start.
    required: true
    value: ''

objects:

  ### JAG-STAFFNET-TESTS Deployment Config ###
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: ${COMPONENT_NAME}
      namespace: ${OC_NAMESPACE}-${OC_ENV}

    spec:
      completionDeadlineSeconds: 1200
      replicas: 1
      selector:
        name: ${COMPONENT_NAME}
      strategy:
        type: Rolling
        maxSurge: 50%
        maxUnavailable: 0
      template:
        metadata:
          labels:
            name: ${COMPONENT_NAME}
        spec:
          containers:
            - image: >-
                image-registry.openshift-image-registry.svc:5000/${OC_NAMESPACE}-tools/${COMPONENT_NAME}:${OC_ENV}
              name: ${COMPONENT_NAME}
              imagePullPolicy: Always
              ports:
                - containerPort: 8080
              env:
                - name: BIOMETRIC_AUTH_USER
                  valueFrom:
                    secretKeyRef:
                      name: staffnet-application-secrets
                      key: BIOMETRIC_AUTH_USER
                - name: BIOMETRIC_AUTH_PASS
                  valueFrom:
                    secretKeyRef:
                      name: staffnet-application-secrets
                      key: BIOMETRIC_AUTH_PASS
                - name: PROVISION_AUTH_USER
                  valueFrom:
                    secretKeyRef:
                      name: staffnet-application-secrets
                      key: PROVISION_AUTH_USER
                - name: PROVISION_AUTH_PASS
                  valueFrom:
                    secretKeyRef:
                      name: staffnet-application-secrets
                      key: PROVISION_AUTH_PASS
                - name: SPRING_PROFILES_ACTIVE
                  valueFrom:
                    secretKeyRef:
                      name: staffnet-application-secrets
                      key: SPRING_PROFILE
                - name: API_HOST
                  valueFrom:
                    secretKeyRef:
                      name: staffnet-application-secrets
                      key: API_HOST
              resources:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 50m
                  memory: 256Mi
              livenessProbe:
                httpGet:
                  path: "/actuator/health"
                  port: 8080
                  scheme: HTTP
                  httpHeaders:
                    - name: Authorization
                      value: ${AUTH_HEADER}
                initialDelaySeconds: 100
                timeoutSeconds: 30
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: "/actuator/health"
                  port: 8080
                  scheme: HTTP
                  httpHeaders:
                    - name: Authorization
                      value: ${AUTH_HEADER}
                initialDelaySeconds: 100
                timeoutSeconds: 30
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${COMPONENT_NAME}
            from:
              kind: ImageStreamTag
              namespace: ${OC_NAMESPACE}-tools
              name: ${COMPONENT_NAME}:${OC_ENV}

  ### JAG-STAFFNET-TESTS Service ###
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${COMPONENT_NAME}
      namespace: ${OC_NAMESPACE}-${OC_ENV}
    spec:
      ports:
        - name: http
          protocol: TCP
          port: 80
          targetPort: 8080
      selector:
        name: ${COMPONENT_NAME}
      sessionAffinity: None
      type: ClusterIP

  ### JAG-STAFFNET-TESTS Route ###
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${COMPONENT_NAME}
      namespace: ${OC_NAMESPACE}-${OC_ENV}
    annotations:
      # router timeout
      haproxy.router.openshift.io/timeout: 10m
      # if we do not use sticky-session, disable_cookies needs to be true
      haproxy.router.openshift.io/disable_cookies: "true"
      # balance algorithm
      haproxy.router.openshift.io/balance: roundrobin
    spec:
      host: ${COMPONENT_NAME}-${OC_NAMESPACE}-${OC_ENV}.${DNS}
      to:
        kind: Service
        name: ${COMPONENT_NAME}
        weight: 100
      port:
        targetPort: http
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: None
      wildcardPolicy: None
  8
  gitops/openshift/apps/jag-staffnet-service/template/README.md
  Viewed
  @@ -0,0 +1,8 @@
  ## Templates to create openshift components related to jag-staffnet-service api deployment

  ### Command to execute template
  1) Login to OC using login command
  2) Run below command in each env. namespace dev/test/prod/tools
  ``oc process -f jag-staffnet-service.yaml --param-file=jag-staffnet-service.env | oc apply -f -``
